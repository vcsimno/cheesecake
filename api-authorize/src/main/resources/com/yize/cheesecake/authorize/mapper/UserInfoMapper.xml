<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2022. yize.link
  ~ editor: yize
  ~ date:  2022/11/1
  ~
  ~ @author yize<vcsimno@163.com>
  ~ 本开源由yize发布和开发，部分工具引用了其他优秀团队的开源工具包。
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yize.cheesecake.authorize.mapper.UserInfoMapper">
    <resultMap id="BaseResultMap" type="com.yize.cheesecake.authorize.pojo.UserInfo">
        <id column="cc_account" jdbcType="VARCHAR" property="ccAccount"/>
        <result column="cc_lasttime" jdbcType="VARCHAR" property="ccLasttime"/>
        <result column="cc_front" jdbcType="VARCHAR" property="ccFront"/>
        <result column="cc_nickname" jdbcType="VARCHAR" property="ccNickname"/>
        <result column="cc_gender" jdbcType="CHAR" property="ccGender"/>
        <result column="cc_province" jdbcType="VARCHAR" property="ccProvince"/>
        <result column="cc_city" jdbcType="VARCHAR" property="ccCity"/>
        <result column="cc_address" jdbcType="VARCHAR" property="ccAddress"/>
        <result column="cc_birthday" jdbcType="VARCHAR" property="ccBirthday"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        cc_account
        , cc_lasttime, cc_front, cc_nickname, cc_gender, cc_province, cc_city,
    cc_address, cc_birthday
    </sql>
    <select id="selectByExample" parameterType="com.yize.cheesecake.authorize.pojo.UserInfoExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from cc_userinfo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from cc_userinfo
        where cc_account = #{ccAccount,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from cc_userinfo
        where cc_account = #{ccAccount,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.yize.cheesecake.authorize.pojo.UserInfoExample">
        delete from cc_userinfo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.yize.cheesecake.authorize.pojo.UserInfo">
        insert into cc_userinfo (cc_account, cc_lasttime, cc_front,
                                 cc_nickname, cc_gender, cc_province,
                                 cc_city, cc_address, cc_birthday)
        values (#{ccAccount,jdbcType=VARCHAR}, #{ccLasttime,jdbcType=VARCHAR}, #{ccFront,jdbcType=VARCHAR},
                #{ccNickname,jdbcType=VARCHAR}, #{ccGender,jdbcType=CHAR}, #{ccProvince,jdbcType=VARCHAR},
                #{ccCity,jdbcType=VARCHAR}, #{ccAddress,jdbcType=VARCHAR}, #{ccBirthday,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.yize.cheesecake.authorize.pojo.UserInfo">
        insert into cc_userinfo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="ccAccount != null">
                cc_account,
            </if>
            <if test="ccLasttime != null">
                cc_lasttime,
            </if>
            <if test="ccFront != null">
                cc_front,
            </if>
            <if test="ccNickname != null">
                cc_nickname,
            </if>
            <if test="ccGender != null">
                cc_gender,
            </if>
            <if test="ccProvince != null">
                cc_province,
            </if>
            <if test="ccCity != null">
                cc_city,
            </if>
            <if test="ccAddress != null">
                cc_address,
            </if>
            <if test="ccBirthday != null">
                cc_birthday,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="ccAccount != null">
                #{ccAccount,jdbcType=VARCHAR},
            </if>
            <if test="ccLasttime != null">
                #{ccLasttime,jdbcType=VARCHAR},
            </if>
            <if test="ccFront != null">
                #{ccFront,jdbcType=VARCHAR},
            </if>
            <if test="ccNickname != null">
                #{ccNickname,jdbcType=VARCHAR},
            </if>
            <if test="ccGender != null">
                #{ccGender,jdbcType=CHAR},
            </if>
            <if test="ccProvince != null">
                #{ccProvince,jdbcType=VARCHAR},
            </if>
            <if test="ccCity != null">
                #{ccCity,jdbcType=VARCHAR},
            </if>
            <if test="ccAddress != null">
                #{ccAddress,jdbcType=VARCHAR},
            </if>
            <if test="ccBirthday != null">
                #{ccBirthday,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.yize.cheesecake.authorize.pojo.UserInfoExample"
            resultType="java.lang.Long">
        select count(*) from cc_userinfo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update cc_userinfo
        <set>
            <if test="record.ccAccount != null">
                cc_account = #{record.ccAccount,jdbcType=VARCHAR},
            </if>
            <if test="record.ccLasttime != null">
                cc_lasttime = #{record.ccLasttime,jdbcType=VARCHAR},
            </if>
            <if test="record.ccFront != null">
                cc_front = #{record.ccFront,jdbcType=VARCHAR},
            </if>
            <if test="record.ccNickname != null">
                cc_nickname = #{record.ccNickname,jdbcType=VARCHAR},
            </if>
            <if test="record.ccGender != null">
                cc_gender = #{record.ccGender,jdbcType=CHAR},
            </if>
            <if test="record.ccProvince != null">
                cc_province = #{record.ccProvince,jdbcType=VARCHAR},
            </if>
            <if test="record.ccCity != null">
                cc_city = #{record.ccCity,jdbcType=VARCHAR},
            </if>
            <if test="record.ccAddress != null">
                cc_address = #{record.ccAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.ccBirthday != null">
                cc_birthday = #{record.ccBirthday,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update cc_userinfo
        set cc_account = #{record.ccAccount,jdbcType=VARCHAR},
        cc_lasttime = #{record.ccLasttime,jdbcType=VARCHAR},
        cc_front = #{record.ccFront,jdbcType=VARCHAR},
        cc_nickname = #{record.ccNickname,jdbcType=VARCHAR},
        cc_gender = #{record.ccGender,jdbcType=CHAR},
        cc_province = #{record.ccProvince,jdbcType=VARCHAR},
        cc_city = #{record.ccCity,jdbcType=VARCHAR},
        cc_address = #{record.ccAddress,jdbcType=VARCHAR},
        cc_birthday = #{record.ccBirthday,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.yize.cheesecake.authorize.pojo.UserInfo">
        update cc_userinfo
        <set>
            <if test="ccLasttime != null">
                cc_lasttime = #{ccLasttime,jdbcType=VARCHAR},
            </if>
            <if test="ccFront != null">
                cc_front = #{ccFront,jdbcType=VARCHAR},
            </if>
            <if test="ccNickname != null">
                cc_nickname = #{ccNickname,jdbcType=VARCHAR},
            </if>
            <if test="ccGender != null">
                cc_gender = #{ccGender,jdbcType=CHAR},
            </if>
            <if test="ccProvince != null">
                cc_province = #{ccProvince,jdbcType=VARCHAR},
            </if>
            <if test="ccCity != null">
                cc_city = #{ccCity,jdbcType=VARCHAR},
            </if>
            <if test="ccAddress != null">
                cc_address = #{ccAddress,jdbcType=VARCHAR},
            </if>
            <if test="ccBirthday != null">
                cc_birthday = #{ccBirthday,jdbcType=VARCHAR},
            </if>
        </set>
        where cc_account = #{ccAccount,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yize.cheesecake.authorize.pojo.UserInfo">
        update cc_userinfo
        set cc_lasttime = #{ccLasttime,jdbcType=VARCHAR},
            cc_front    = #{ccFront,jdbcType=VARCHAR},
            cc_nickname = #{ccNickname,jdbcType=VARCHAR},
            cc_gender   = #{ccGender,jdbcType=CHAR},
            cc_province = #{ccProvince,jdbcType=VARCHAR},
            cc_city     = #{ccCity,jdbcType=VARCHAR},
            cc_address  = #{ccAddress,jdbcType=VARCHAR},
            cc_birthday = #{ccBirthday,jdbcType=VARCHAR}
        where cc_account = #{ccAccount,jdbcType=VARCHAR}
    </update>
</mapper>